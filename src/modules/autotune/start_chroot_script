#!/usr/bin/env bash
#### Klipper TMC Autotune install module
####
#### Written by Matth√§us Szturc <MSzturc@gmail.com>
#### Copyright 2024 - till today
####
#### This File is distributed under GPLv3
####
# shellcheck enable=require-variable-braces

# Source error handling, leave this in place
set -Ee

# Source CustomPIOS common.sh
# shellcheck disable=SC1091
source /common.sh
install_cleanup_trap

# Module only Variables
MOONRAKER_CONF_PATH="/home/${BASE_USER}/printer_data/config/moonraker.conf"

echo_green "Installing TMC Autotune ..."

## Force apt update
apt-get update
## Make sure 'git' is installed!
check_install_pkgs git

## Step 1: Move to Home Dir as WorkingDirectoy
pushd "/home/${BASE_USER}" &> /dev/null || exit 1

## Step 2: clone Klipper TMC Autotune repo
gitclone AUTOTUNE_REPO TMC_Installer

## Step 3: Move to Klipper TMC Autotune as working directory
pushd "/home/${BASE_USER}/TMC_Installer" &> /dev/null || exit 1

## Step 4: Run Klipper TMC Autotune install routine bypassing user interaction and security checks
echo_green "Launch Klipper TMC Autotune install routine ..."

# shellcheck disable=SC2016
sed \
  -e 's|if \[ "$EUID" -eq 0 \]; then|if false; then|' \
  -e 's|if ! command -v python3 &> /dev/null; then|if false; then|' \
  -e 's|if \[.*klipper.service.*\]; then|if true; then|' \
  < install.sh > temp_install.sh
chmod +x temp_install.sh

#auto select answer
sudo -u "${BASE_USER}" ./temp_install.sh

## Step 6: remove temp_install.sh
rm temp_install.sh

## Step 7: Update moonraker.conf
if [[ -f "${MOONRAKER_CONF_PATH}" ]]; then
    echo_green "Copying temporary file ..."
    unpack /filesystem/tmp /tmp root
    cat /tmp/moonraker_update_entry.txt >> "${MOONRAKER_CONF_PATH}"
else
    echo_red "File moonraker.conf not found ... [SKIPPED]"
fi

## Step 8: Leave TMC Autotune
popd &> /dev/null || exit 1

## Step 9: remove Klippain installer folder
rm -rf TMC_Installer

## Step 10: leave home dir
popd &> /dev/null || exit 1

## Finish
echo_green "Installing Klipper TMC Autotune ... DONE!"